"""
This file contains the basic essential functions for extracting fingers data from openpose.
This file has following functions:
	1.  create_writefolder_dir: creating directory for writing data
	2. 	conv_xml: extracting finger coordinates from xml_files generated by Open Pose
	3.  fingers_length: converting raw finger coordinates(from conv_xml) to finger lengths
    4. json_to_dict: for converting param.json to a dictionary
"""

import os,sys,glob,re,cv2,json
import numpy as np
import xml.etree.ElementTree as ET 


#open pose path
exe_addr = '.\\bin\\OpenPoseDemo.exe'

hands_key_points=[2,4,5,8,9,12,13,16,17,20]

def create_writefolder_dir(create_dir):
    try:
        os.mkdir(create_dir)
    except WindowsError:
        create_writefolder_dir()

def fingers_length(key_points):
    fingers_len=[]
    for i in range(0,len(key_points),4):
        finger_len=np.sqrt((key_points[i+2]-key_points[i])**2+(key_points[i+3]-key_points[i+1])**2)
        fingers_len.append(finger_len)
    return np.round(fingers_len,4)

def conv_xml(file_path):
    tree = ET.parse(file_path)
    root=tree.getroot()
    vals=root[0][2].text  # this refers to the data we need
    vals = vals.strip().replace('\n','') # Removing the ending white spaces and new lines
    vals = re.sub(' +', ' ', vals).split(' ') # Removing the intermediate excess white spaces
    vals = map(float, vals) # Convert strings to floats
    x = vals[0::3]
    y = vals[1::3]

    xy=[]

    for i in hands_key_points:
        xy.append(np.round(x[i],4))
        xy.append(np.round(y[i],4))
       
    return fingers_length(xy)

def json_to_dict(json_filepath):
    if(not os.path.isfile(json_filepath)):
        sys.exit('Error! Json file: '+json_filepath+' does NOT exists!')
    with open(json_filepath, 'r') as fp:
        var = json.load(fp)
    return var
